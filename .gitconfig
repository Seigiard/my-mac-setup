[user]
	name = Borisenko Andrew
	email = seigiard@gmail.com
[push]
  followTags = true
  default = current
[pull]
  rebase = true
[rebase]
  autoStash = true
[core]
  editor = nano
  autocrlf = input
  whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
excludesfile = /Users/seigiard/.gitignore_global
  pager = diff-so-fancy | less --tabs=4 -RFX
[diff]
  external = difft
  algorithm = histogram
  colorMoved = true
  indentHeuristic = true
[difftool "webstorm"]
  cmd = /Applications/WebStorm.app/Contents/MacOS/webstorm diff "$LOCAL" "$REMOTE"
  trustExitCode = true
[difftool "zed"]
	cmd = zed --wait --diff $LOCAL $REMOTE
	trustExitCode = true
[difftool]
  prompt = false
[merge]
  tool = webstorm
[mergetool "webstorm"]
  cmd = /Applications/WebStorm.app/Contents/MacOS/webstorm merge "$LOCAL" "$REMOTE" "$BASE" "$MERGED"
  trustExitCode = true
[mergetool]
  prompt = false
[alias]
  co = checkout
  st = status
  di = diff
  ci = commit
  up = remote update
  br = branch
  history = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  mom = merge origin/main
  mum = merge upstream/main
	pullmain = "!f() {\n    current=$(git branch --show-current);\n    if git show-ref --verify --quiet refs/heads/main; then\n        git fetch origin main:main &&\n        echo \"‚úÖ Updated main from $(git rev-parse --short HEAD~1) to $(git rev-parse --short main)\" &&\n        echo \"üìç Still on branch: $current\";\n    else\n        echo \"‚ùå Local main branch does not exist\";\n        exit 1;\n    fi\n}; f"
[color]
  ui = true
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = 11
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse
  commit = yellow bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
